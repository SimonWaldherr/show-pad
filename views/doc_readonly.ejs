<!-- included by doc.ejs -->
<% script('/js/tinyosf/tinyosf.js') %>
<% script('/js/tinyosf/tinyosf_exportmodules.js') %>
<% stylesheet('http://cdn.shownot.es/include-shownotes/shownotes.css') %>

<span><%- __('showdoc.error.readonly.' + readonlyReason, '/doc/' + docname) %></span>
<br><br>
<span><%= __('showdoc.readonly.users') %> <span id="users"></span></span>

<h4><%= __('showdoc.readonly.format') %></h4>
<ul id="format" class="nav nav-pills">
    <li class="active">
        <a href="#block" data-format="block"><%= __('showdoc.readonly.format.block') %></a>
    </li>
    <li class="active">
        <a href="#list" data-format="list"><%= __('showdoc.readonly.format.list') %></a>
    </li>
    <li class="active">
        <a href="#raw" data-format="raw"><%= __('showdoc.readonly.format.raw') %></a>
    </li>
    <li class="active">
        <a href="#chapter" data-format="chapter"><%= __('showdoc.readonly.format.chapters') %></a>
    </li>
    <li class="active">
        <a href="#md" data-format="md"><%= __('showdoc.readonly.format.markdown') %></a>
    </li>
</ul>
<hr>
<div class="alert hidden" id="updateerror"></div>
<div class="doctext" style="display: none"><%= __('showdoc.readonly.loading') %></div>
<pre class="doctext"><%= __('showdoc.readonly.loading') %></pre>

<script type="text/javascript">
var lastUpdate = null;
var lastOsf = null;

var hash = window.location.hash;
if(hash && hash.length > 1) hash = hash.substr(1);
var activeFormat = hash || 'block';

setInterval(getDocText, 1000);
getDocText();

function getDocText()
{
    if(!isPageVisible())
    {
        return;
    }

    $.ajax('/doc/<%=docname%>/text?t=' + (+lastUpdate))
        .success
        (
            function (res)
            {
                var status = res.status;
                var date = new Date(res.date);
                var text = res.text;
                var users = res.users;

                $('#users').text(users);
                $('#updateerror').addClass('hidden');

                if(status == "up2date")
                {
                    return;
                }

                lastUpdate = date;
                lastOsf = text;
                updateUI();
            }
        )
        .fail
        (
            function (res)
            {
                $('#updateerror').removeClass('hidden').text("<%=__('showdoc.readonly.updateerror')%>")
            }
        );
}

function updateUI()
{
    var exported;

    if(!lastOsf)
    {
        return;
    }

    if(activeFormat === 'raw')
    {
        exported = lastOsf;
    }
    else
    {
        var parsed = osfParser(lastOsf);
        exported = osfExport(parsed, osfExportModules[activeFormat]);
    }

    $('.doctext').hide();

    switch(activeFormat)
    {
        case 'raw':
        case 'chapter':
        case 'md':
            $('pre.doctext').show().text(exported);
            break;
        case 'block':
        case 'list':
            $('div.doctext').show().html(exported);
            break;
    }
}

selectFormat(activeFormat);

$('#format.nav').click(
    function (evt)
    {
        var elem = $(evt.target);
        var format = elem.data("format");

        if(format != undefined)
        {
            $('#format.nav li').removeClass('disabled').addClass('active');
            activeFormat = format;
            selectFormat(format);
            updateUI();
        }
    }
)

function selectFormat(format)
{
    $('li a[data-format=' + activeFormat + ']')
        .parent('li')
        .addClass('disabled')
        .removeClass('active');
}

function isPageVisible()
{
    var visibility = "visible";

    if(document.webkitVisibilityState)
    {
        // Chrome
        visibility = document.webkitVisibilityState;
    }
    else if(document.visibilityState)
    {
        // FF
        visibility = document.visibilityState;
    }
    else if(document.hidden)
    {
        // Opera
        visibility = document.hidden ? "hidden" : "visible";
    }

    return visibility != "hidden";
}
</script>
