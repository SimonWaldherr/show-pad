<!-- included by doc.ejs -->
<% script('/js/tinyosf.js') %>
<% stylesheet('http://cdn.shownot.es/include-shownotes/shownotes.css') %>

<span><%- __('showdoc.error.readonly.' + readonlyReason, '/doc/' + docname) %></span>
<br><br>
<span><%= __('showdoc.readonly.users') %> <span id="users"></span></span>

<h4><%= __('showdoc.readonly.format') %></h4>
<ul id="format" class="nav nav-pills">
    <li class="active">
        <a href="#html" data-format="html"><%= __('showdoc.readonly.format.html') %></a>
    </li>
    <li class="active">
        <a href="#raw" data-format="raw"><%= __('showdoc.readonly.format.raw') %></a>
    </li>
    <li class="active">
        <a href="#chapter" data-format="chapter"><%= __('showdoc.readonly.format.chapters') %></a>
    </li>
    <li class="active">
        <a href="#md" data-format="md"><%= __('showdoc.readonly.format.markdown') %></a>
    </li>
</ul>
<hr>
<div class="alert hidden" id="updateerror"></div>
<div class="doctext">Loading...</div>
<pre class="doctext">Loading...</pre>

<script>
var hash = window.location.hash;
if(hash && hash.length > 1) hash = hash.substr(1);
var activeFormat = hash || "html";

setInterval(getDocText, 1000);
getDocText();

function getDocText()
{
    $.ajax('/doc/<%=docname%>/text')
        .success
        (
            function (res)
            {
                var text = res.text;
                var users = res.users;
                var exported;

                if(activeFormat == "raw")
                {
                    exported = text;
                }
                else
                {
                    var parsed = osfParser(text);
                    exported = osfExport(parsed, activeFormat);
                }

                $('.doctext').hide();
                switch(activeFormat)
                {
                    case "raw":
                    case "chapter":
                    case "md":
                        $('pre.doctext').show().text(exported);
                        break;
                    case "html":
                        $('div.doctext').show().html(exported);
                        break;
                }

                $('#users').text(users);
                $('#updateerror').addClass('hidden');
            }
        )
        .fail
        (
            function (res)
            {
                $('#updateerror').removeClass('hidden').text("<%=__('showdoc.readonly.updateerror')%>")
            }
        );
}

selectFormat(activeFormat);

$('#format.nav').click(
    function (evt)
    {
        var elem = $(evt.target);
        var format = elem.data("format");

        $('#format.nav li').removeClass('disabled').addClass('active');
        activeFormat = format;
        selectFormat(activeFormat);
    }
)

function selectFormat(format)
{
    $('li a[data-format=' + activeFormat + ']')
        .parent('li')
        .addClass('disabled')
        .removeClass('active');
    getDocText();
}
</script>
